<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA85QkK/SXIXP0lyKf9Jcin/SW
        InLzmB4qAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADqlSsM9JYgnqqyZf6tsWL/85Yh//OW
        If/zliH/85Yh/vSWIZzoixcLAAAAAAAAAAAAAAAAAAAAAAAAAADumSIP85YhzuibLP8728v/O9vL/66w
        Yf/zliH/85Yh//OWIf+WuXf/4J0y0O2SJA4AAAAAAAAAAAAAAAAAAAAA85UhqfOWIf+ms2f/OdzN/znc
        zf9R07b/85Yh//OWIf/pmir/P9rI/2DNqf/tmCaoAAAAAAAAAAAAAAAA85cjLPOWIf7zliH/fsKN/znc
        zf9ly6T/1KE+//OWIf/zliH/sK9f/znczf853M3/prNo/vOYHioAAAAAAAAAAPOVIXvsmSf/m7dy/7St
        W/+6rFf/6pkp//OWIf/Fp0z/P9rI/znczf853M3/OdzN/2LNpv/ylyJ4AAAAAAAAAAD0lyKfb8eb/429
        gP+ct3H/8pYi//OWIf/zliH/65kp/0zVu/853M3/OdzN/znczf9E18L/9JUgnQAAAAAAAAAA9Jcin0HZ
        xv853M3/OdzN/72qU//yliL/85Yh//OWIf+Pu3z/OdzN/znczf853M3/RNfC//SWIJ4AAAAAAAAAAPOW
        IXxfzqv/OdzN/znczf853M3/Xc+s/9+dNP/zliH/65kp/0zVu/853M3/OdzN/2LNpv/yliJ5AAAAAAAA
        AAD0liEuorVs/znczf9syZ//nrZw/0vVvf/enjT/85Yh//OWIf/YoDr/QtnF/znczf+ltGr+85QkKwAA
        AAAAAAAAAAAAAOuaJ7Bbz67/QdnF/8imSP/MpUX/2KA6/7KvXf/zliH/2584/z7byf9Z0LD/7JknrAAA
        AAAAAAAAAAAAAAAAAADwlh4R4Jwx1pq3c/+DwIj/v6lR/9ShPv853M3/orVs//OWIf+usGH/2aA41u+P
        IBAAAAAAAAAAAAAAAAAAAAAAAAAAAPCWHhHzliKv85Yh//OWIf+wr17/QtnF/2zJn//zliH/85Ygre+P
        IBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPSVIDDzliGD85YgpfOVIaTzlSGC9JghLwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD+fwAA8A8AAOAHAADAAwAAwAMAAMADAACAAQAAgAEAAMAD
        AADAAwAAwAMAAOAHAADwDwAA/D8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADoixcL8pkgKPOUIT7zlCE+8pYhJ+iLFwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPCWHiLzliB+8pYhyvOWIf3zliH/85Yh//OWIf/zliH/85Yh/fSWIcnzlyF98JMfIQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPCWHhHyliGN85Yh+eOcMP/CqU7/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH48pYhi++PIBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD0kyIt85Yh3fOWIf+Gv4b/PtrI/znczf+8q1T/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Uh1/KWIScAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8pcfUfOWIfbzliH/8Zcj/z/ayP853M3/OdzN/0TYw//Hp0n/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh/8enSv+4rFj/85Yh9fKUIE8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPWUHzL0liH085Yh//OWIf/Hp0n/OdzN/znczf853M3/OdzN/z3b
        yv+/qVH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/i72B/zrczP+ls2n/9JYh9PWXHzEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0myEX85Yh6fOWIf/zliH/85Yh/4DBi/853M3/OdzN/znc
        zf853M3/OdzN/23Jnf/zliH/85Yh//OWIf/zliH/85Yh//OWIf9S07b/OdzN/zrczP+4rFj/85Yh5/OS
        JBUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOVIZHzliH/85Yh//OWIf/kmy7/PdvK/znc
        zf853M3/OdzN/znczf853M3/U9K1//OWIf/zliH/85Yh//OWIf/zliH/zaRD/znczf853M3/OdzN/0TX
        wv/hnTL/8pYhjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxmCIl85Yh+vOWIf/zliH/85Yh/8ul
        R/853M3/OdzN/znczf853M3/TNW7/5O6ef/MpUX/85Yh//OWIf/zliH/85Yh//OWIf+ftW7/OdzN/znc
        zf853M3/OdzN/33Djv/zliH68JkkIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOXIH/zliH/85Yh//OW
        If/zliH/walP/znczf853M3/OdzN/z7byf/hnTH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/6Jor/17O
        q/853M3/OdzN/znczf853M3/PNvL/9yfNv/zliF8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA85YhzvOW
        If/zliH/85Yh/8ylRf+BwYr/g8CI/4PAiP+NvYD/y6VH//OWIf/zliH/85Yh//OWIf+ms2f/RdfB/0XX
        wf8728v/OdzN/znczf853M3/OdzN/znczf853M3/nrZv//KVIcsAAAAAAAAAAAAAAAAAAAAAAAAAAPKZ
        JhTzliH/85Yh/9yfN/9ly6T/Sta+/+maKv/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh/3/B
        jP853M3/OdzN/znczf853M3/OdzN/znczf853M3/OdzN/znczf9vyJv/85Yh/vCWHhEAAAAAAAAAAAAA
        AAAAAAAA9JghL/OWIf/dnjX/SNfA/3DHmv/knC//85Yh/5u3cv/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/z6NC/z3byv853M3/OdzN/znczf853M3/OdzN/znczf853M3/OdzN/0/Uuv/zliH/85cjLAAA
        AAAAAAAAAAAAAAAAAAD1lh9J85Yh/2vJn/853M3/RNfC/6uxZP+WuXf/S9W8//GXI//zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/hb+G/znczf853M3/OdzN/znczf853M3/OdzN/znczf853M3/P9rI//OW
        If/0lSBIAAAAAAAAAAAAAAAAAAAAAPWWH0nzliH/QdnF/znczf853M3/OdzN/znczf853M3/zaRE//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/Toj7/OdzN/znczf853M3/OdzN/znczf853M3/OdzN/znc
        zf8/2sj/85Yh//SVIEgAAAAAAAAAAAAAAAAAAAAA9JUgMPOWIf9R07b/OdzN/znczf853M3/OdzN/znc
        zf9ly6T/yqVI/+uZKf/zliH/85Yh//OWIf/zliH/85Yh//OWIf9I1r//OdzN/znczf853M3/OdzN/znc
        zf853M3/OdzN/03Vuv/zliH/9JYhLgAAAAAAAAAAAAAAAAAAAADymSYU85Yh/2zJn/853M3/OdzN/znc
        zf853M3/OdzN/znczf853M3/RNjD/6Szav/zliH/85Yh//OWIf/zliH/85Yh/9ehO/8928r/OdzN/znc
        zf853M3/OdzN/znczf853M3/bMmf//OWIf/xnBwSAAAAAAAAAAAAAAAAAAAAAAAAAADzliLVn7Vu/znc
        zf853M3/OdzN/znczf853M3/OdzN/znczf853M3/OdzN/5q3c//zliH/85Yh//OWIf/zliH/85Yh/37C
        jf853M3/OdzN/znczf853M3/OdzN/znczf+dt3L/85ch0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPSV
        IIfbnzj/O9vL/znczf853M3/OdzN/4m+g/+Gv4f/OtzM/znczf853M3/m7dy//OWIf/zliH/85Yh//OW
        If/zliH/8Zcj/4W/hv853M3/OdzN/znczf853M3/O9vL/9ufOP/zlyGEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA85UfKfOWIfx9w47/OdzN/znczf853M3/t61Z//OWIf+/qVH/T9S5/3PGl//tmCb/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/75ck/2DNqf853M3/OdzN/znczf94xZP/85Yh+/KWIScAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8pYhodufOP9D2MT/OdzN/znczf9oy6L/8Zcj//OWIf/zliH/85Yh//OW
        If/kmy7/4pww//OWIf/zliH/85Yh//OWIf+WuXf/OdzN/znczf853M3/RNfC/+GdMv/0liCeAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD2kiQc85Yh7bCvX/853M3/OdzN/znczf95xJL/wKlP/5C7
        ff+WuXf/85Yh/523cf9F18H/vKtU//OWIf/zliH/85Yh/+WbLv9I18D/OdzN/zrczP+wr1//85Yh7PWT
        HRoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADylyJM85Yh/LurVf9Y0LD/OdzN/znc
        zf853M3/UdO2/8enSv/zliH/qrFk/znczf8728v/oLVt//OWIf/zliH/85Yh/7OuXP863Mz/pLNq//OW
        Ifz1mCJKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0lyFd85Yh+vOW
        If/anzj/xKhN/8mmSP/ulyX/85Yh//OWIf/DqE3/OdzN/znczf853M3/s65c//OWIf/zliH/85Yh/9Oi
        Pv/zliH59JYiWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADylSFN85Yh8/OWIf/zliH/85Yh//OWIf/zliH/8Zcj/6qxZP853M3/OdzN/znczf9X0bH/85Yh//OW
        If/zliH/85Yh8vKXIkwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD3mSIe9Jcin/OWIfzzliH/85Yh//OWIf/NpET/QdnF/z7byf9W0bL/csaX/62x
        Yv/zliH/85Yh/PSVIJ32lSMdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8pkgKPOWIYPzlyLN85Yh/vOWIf/zliH/85Yh//OW
        If/zliH+85YhzPOVIYLyliEnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADrnScN8pkgKPOW
        ID/zlCE+8pkgKOqVKwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////wD///gAH//wAA//4AAH/8AAA/+AAAH/AA
        AA/wAAAP8AAAD+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB/AAAA/wAAAP+AAAH/wA
        AD/+AAB//wAA//+AAf//4Af/////////////////
</value>
  </data>
</root>