<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdlpAnAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFfHFznpiPqgAA
        AAAAAAAA/wAAAdN5AHTOeQAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFfXFYhn1y/Z6Y
        j6oAAAAA//8AAd2KDH7UeAD/1HgAyL+AAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHfHRChn1y+IZ9
        cv+hmZKq//8AAeScG47imxn+2okMw9R4AP/TeQBuAAAAAAAAAAAAAAAAAAAAAGhjXI5pY1yqhn1y9YZ9
        cv+GfXL/opuSqvHBNpPvvTLQ45wb+uKaGPDVegHz1HkA3AAAAAAAAAAAAAAAAAAAAABpY1z/aWNc/4Z9
        cv+GfXL/hn1y/7ishdr0yjzX8cE1/+qvJ8Limxn/24gMxdR4AP/RdgAnAAAAAAAAAAAAAAAAaWNc/2lj
        XP+GfXL/hn1y/4Z9cv/Etn///uRO0fHBNf/wvDHG4psZ/9+QEb/UeAD/1HcARwAAAAAAAAAAAAAAAGlj
        XP9pY1z/hn1y/4Z9cv+GfXL/xLiA//7kTtHxwTX/8LwxxuKbGf/ekBG/1HgA/9R3AEcAAAAAAAAAAAAA
        AABpY1z/aWNc/4Z9cv+GfXL/hn1y/7yviNn0yjzX8cE1/+qvJ8Limxn/24gMxdR4AP/RdgAnAAAAAAAA
        AAAAAAAAamNck2lkW7uGfXL1hn1y/4Z9cv+rpJuq8cE2k++9MtDjnBv64poY8NV6AfPUeQDcAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAhnxzVIZ9cvyGfXL/raWcqv//AAHknBuO4psZ/tqJDMPUeAD/03kAbgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHfXNkhn1y/rCnnqoAAAAA//8AAd2KDH7UeAD/1HgAyL+A
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIZ9cm6xqJ+qAAAAAAAAAAD/AAAB1XcAeM55
        ABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs6yfJQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA/v8AAPznAAD4hwAAwAMAAMADAADAAwAAwAMAAMAD
        AADAAwAA+IcAAPznAAD+/wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACelo+Ln5ePIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        cv+GfXL/rqWd/66lnFUAAAAAAAAAAP+AAATjmxqq4psZ/+KbGf3biQzE1HgA/9R4AP/UeAD/03cArwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIR7
        cjiGfXL1hn1y/4Z9cv+vpp3/rqWcVQAAAAAAAAAAAAAAANuSJAfimxm324oNx9R4AP/UeAD/1HgA/9V4
        APDTewAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAId8cUiGfXL6hn1y/7Cnnv+upZ9VAAAAAAAAAAAAAAAAAAAAAMxmAAXUeACs1HgA/9R4
        AP/UeAD+1nkAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIZ+cV+GfXL+saif/7Gon1UAAAAAAAAAAAAAAAAAAAAAAAAAAMxm
        AAXVeACu1HgA/tV3AG0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAId9cWyyqaD/saifVQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANWAAAbVeQA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALOqoYqzqqIeAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////9/////f////n8///x+H//4fA//8HgH/+B
        wB//AYAP8AEAD/AAAA/wAAAP8AAAB/AAAAfwAAAH8AAAB/AAAA/wAAAP8AEAD/8BgA//gcAf/8HgH//h
        8D//8fh///n8///9/////f//////////////////
</value>
  </data>
</root>